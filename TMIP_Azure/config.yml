PATHS:
  RAW_COVID_DATA: '/covid-chestxray-dataset/'   # Path of extracted COVID dataset https://github.com/ieee8023/covid-chestxray-dataset
  RAW_OTHER_DATA: '/rsna-data/'                      # Path of extracted NIH dataset https://www.kaggle.com/c/rsna-pneumonia-detection-challenge
  PROCESSED_DATA: 'data/processed/'
  TRAIN_IMGS: 'data/processed/train/'
  VAL_IMGS: 'data/processed/val/'
  TEST_IMGS: 'data/processed/test/'
  TRAIN_SET: 'data/processed/train_set.csv'
  VAL_SET: 'data/processed/val_set.csv'
  TEST_SET: 'data/processed/test_set.csv'
  IMAGES: 'documents/generated_images/'
  LOGS: 'results\\logs\\'
  MODEL_WEIGHTS: '...../results/models/model20200415-205206.h5'
  MODEL_TO_LOAD: '..../results/models/model20200415-205206.h5'
  LIME_EXPLAINER: './data/interpretability/lime_explainer.pkl'
  OUTPUT_CLASS_INDICES: './data/interpretability/output_class_indices.pkl'
  BATCH_PRED_IMGS: 'data/processed/test/'
  BATCH_PREDS: 'results/predictions/'

DATA:
  IMG_DIM: [224, 224]
  VAL_SPLIT: 0.08
  TEST_SPLIT: 0.1
  KAGGLE_DATA_FRAC: 0.2
  NUM_RSNA_IMGS: 907
  CLASSES: ['non-COVID-19', 'COVID-19']                   # Classes for binary classification
  #CLASSES: ['normal', 'COVID-19', 'other_pneumonia']     # Classes for multiclass classification (3 classes)

TRAIN:
  CLASS_MODE: 'binary'                                    # One of {'binary', 'multiclass'}
  CLASS_MULTIPLIER: [0.15, 1.0]                           # Class multiplier for binary classification
  #CLASS_MULTIPLIER: [0.4, 1.0, 0.4]                      # Class multiplier for multiclass classification (3 classes)
  EXPERIMENT_TYPE: 'single_train'                         # One of {'single_train', 'multi_train', 'hparam_search'}
  BATCH_SIZE: 16
  EPOCHS: 200
  THRESHOLDS: 0.5                                         # Can be changed to list of values in range [0, 1]
  PATIENCE: 7
  IMB_STRATEGY: 'class_weight'                            # One of {'class_weight', 'random_oversample'}
  METRIC_PREFERENCE: ['auc', 'recall', 'precision', 'loss']
  NUM_RUNS: 10

NN:
  DCNN_BINARY:
    KERNEL_SIZE: (3,3)
    STRIDES: (1,1)
    INIT_FILTERS: 16
    FILTER_EXP_BASE: 3
    MAXPOOL_SIZE: (2,2)
    CONV_BLOCKS: 3
    NODES_DENSE0: 128
    LR: 0.0003
    OPTIMIZER: 'adam'
    DROPOUT: 0.40
    L2_LAMBDA: 0.0001
  DCNN_MULTICLASS:
    KERNEL_SIZE: (3,3)
    STRIDES: (1,1)
    INIT_FILTERS: 16
    FILTER_EXP_BASE: 3
    MAXPOOL_SIZE: (2,2)
    CONV_BLOCKS: 4
    NODES_DENSE0: 128
    LR: 0.0002
    OPTIMIZER: 'adam'
    DROPOUT: 0.40
    L2_LAMBDA: 0.0001

LIME:
  KERNEL_WIDTH: 1.75
  FEATURE_SELECTION: 'lasso_path'
  NUM_FEATURES: 10000
  NUM_SAMPLES: 4000
  COVID_ONLY: false

HP_SEARCH:
  METRICS: ['accuracy', 'loss', 'recall', 'precision', 'auc']
  COMBINATIONS: 50
  REPEATS: 3
  RANGES:
    KERNEL_SIZE: ['(3,3)', '(5,5)']     # Discrete range
    MAXPOOL_SIZE: ['(2,2)', '(3,3)']    # Discrete range
    INIT_FILTERS: [8, 16, 32]           # Discrete range
    FILTER_EXP_BASE: [2, 3]             # Int range
    NODES_DENSE0: [128, 256]            # Discrete range
    CONV_BLOCKS: [2, 4]                 # Int range
    DROPOUT: [0.2, 0.4]                 # Real range
    LR: [-4.0, -3.0]                    # Real range on log scale (10^x)
    OPTIMIZER: ['adam', 'sgd']          # Discrete range
    L2_LAMBDA: [-5.0, -4.0]             # Real range on log scale (10^x)
    BATCH_SIZE: [8, 16]                 # Discrete range
    IMB_STRATEGY: ['class_weight', 'random_oversample']  # Discrete range

PREDICTION:
  THRESHOLD: 0.5
